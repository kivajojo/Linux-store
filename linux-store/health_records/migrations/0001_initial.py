# Generated by Django 5.1.4 on 2024-12-08 02:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_elderly', models.BooleanField(default=False, verbose_name='是否为老人')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='联系电话')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='姓名')),
                ('gender', models.CharField(blank=True, choices=[('M', '男'), ('F', '女')], max_length=10, verbose_name='性别')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('emergency_contact', models.CharField(blank=True, max_length=50, verbose_name='紧急联系人')),
                ('emergency_phone', models.CharField(blank=True, max_length=20, verbose_name='紧急联系电话')),
                ('medical_history', models.TextField(blank=True, verbose_name='既往病史')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HealthRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='日期')),
                ('recommendation', models.TextField(verbose_name='建议')),
                ('risk_level', models.CharField(max_length=20, verbose_name='风险等级')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '健康建议',
                'verbose_name_plural': '健康建议',
            },
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('blood_pressure', models.CharField(max_length=20, verbose_name='血压')),
                ('heart_rate', models.IntegerField(verbose_name='心率')),
                ('blood_sugar', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='血糖')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='体重')),
                ('activity_level', models.CharField(blank=True, choices=[('low', '低强度'), ('moderate', '中等强度'), ('high', '高强度')], default='moderate', max_length=10, verbose_name='活动强度')),
                ('activity_duration', models.IntegerField(blank=True, null=True, verbose_name='活动时长(分钟)')),
                ('activity_type', models.CharField(blank=True, max_length=100, verbose_name='活动类型')),
                ('breakfast', models.TextField(blank=True, verbose_name='早餐')),
                ('lunch', models.TextField(blank=True, verbose_name='午餐')),
                ('dinner', models.TextField(blank=True, verbose_name='晚餐')),
                ('water_intake', models.FloatField(blank=True, null=True, verbose_name='饮水量(升)')),
                ('sleep_hours', models.FloatField(blank=True, null=True, verbose_name='睡眠时长(小时)')),
                ('mood', models.CharField(blank=True, max_length=50, verbose_name='心情')),
                ('medication', models.TextField(blank=True, verbose_name='服药记录')),
                ('notes', models.TextField(blank=True, verbose_name='备注')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '健康记录',
                'verbose_name_plural': '健康记录',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(max_length=200, verbose_name='病症')),
                ('diagnosis_date', models.DateField(verbose_name='诊断日期')),
                ('treatment', models.TextField(verbose_name='治疗方案')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '病史记录',
                'verbose_name_plural': '病史记录',
            },
        ),
    ]
